//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SKT.Common.TikleDocManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Authority", Namespace="http://schemas.datacontract.org/2004/07/Tnet.Sharepoint.Models")]
    [System.SerializableAttribute()]
    public partial class T_Authority : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AD_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TYPEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AD_ID {
            get {
                return this.AD_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.AD_IDField, value) != true)) {
                    this.AD_IDField = value;
                    this.RaisePropertyChanged("AD_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TYPE {
            get {
                return this.TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TYPEField, value) != true)) {
                    this.TYPEField = value;
                    this.RaisePropertyChanged("TYPE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/Tnet.Sharepoint.Models")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MESSAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int STATUSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGE {
            get {
                return this.MESSAGEField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEField, value) != true)) {
                    this.MESSAGEField = value;
                    this.RaisePropertyChanged("MESSAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((this.STATUSField.Equals(value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_FileInfo", Namespace="http://schemas.datacontract.org/2004/07/Tnet.Sharepoint.Models")]
    [System.SerializableAttribute()]
    public partial class T_FileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CREATE_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDITORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDITOR_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIT_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIT_URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FILE_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOLDER_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HAS_EDITED_VERSIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IS_CURRENT_VERSIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VERSION_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WRITERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WRITE_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATE_DATE {
            get {
                return this.CREATE_DATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATE_DATEField, value) != true)) {
                    this.CREATE_DATEField = value;
                    this.RaisePropertyChanged("CREATE_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITOR {
            get {
                return this.EDITORField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITORField, value) != true)) {
                    this.EDITORField = value;
                    this.RaisePropertyChanged("EDITOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITOR_ID {
            get {
                return this.EDITOR_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITOR_IDField, value) != true)) {
                    this.EDITOR_IDField = value;
                    this.RaisePropertyChanged("EDITOR_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIT_DATE {
            get {
                return this.EDIT_DATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIT_DATEField, value) != true)) {
                    this.EDIT_DATEField = value;
                    this.RaisePropertyChanged("EDIT_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIT_URL {
            get {
                return this.EDIT_URLField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIT_URLField, value) != true)) {
                    this.EDIT_URLField = value;
                    this.RaisePropertyChanged("EDIT_URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FILE_NAME {
            get {
                return this.FILE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FILE_NAMEField, value) != true)) {
                    this.FILE_NAMEField = value;
                    this.RaisePropertyChanged("FILE_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOLDER_NAME {
            get {
                return this.FOLDER_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FOLDER_NAMEField, value) != true)) {
                    this.FOLDER_NAMEField = value;
                    this.RaisePropertyChanged("FOLDER_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HAS_EDITED_VERSION {
            get {
                return this.HAS_EDITED_VERSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.HAS_EDITED_VERSIONField, value) != true)) {
                    this.HAS_EDITED_VERSIONField = value;
                    this.RaisePropertyChanged("HAS_EDITED_VERSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IS_CURRENT_VERSION {
            get {
                return this.IS_CURRENT_VERSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.IS_CURRENT_VERSIONField, value) != true)) {
                    this.IS_CURRENT_VERSIONField = value;
                    this.RaisePropertyChanged("IS_CURRENT_VERSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VERSION_NO {
            get {
                return this.VERSION_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.VERSION_NOField, value) != true)) {
                    this.VERSION_NOField = value;
                    this.RaisePropertyChanged("VERSION_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WRITER {
            get {
                return this.WRITERField;
            }
            set {
                if ((object.ReferenceEquals(this.WRITERField, value) != true)) {
                    this.WRITERField = value;
                    this.RaisePropertyChanged("WRITER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WRITE_ID {
            get {
                return this.WRITE_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.WRITE_IDField, value) != true)) {
                    this.WRITE_IDField = value;
                    this.RaisePropertyChanged("WRITE_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_UserInfo", Namespace="http://schemas.datacontract.org/2004/07/Tnet.Sharepoint.Models")]
    [System.SerializableAttribute()]
    public partial class T_UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MESSAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int STATUSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGE {
            get {
                return this.MESSAGEField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEField, value) != true)) {
                    this.MESSAGEField = value;
                    this.RaisePropertyChanged("MESSAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficePhone {
            get {
                return this.OfficePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficePhoneField, value) != true)) {
                    this.OfficePhoneField = value;
                    this.RaisePropertyChanged("OfficePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((this.STATUSField.Equals(value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TikleDocManagerService.IDocManagerService")]
    public interface IDocManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/CreateFolder", ReplyAction="http://tempuri.org/IDocManagerService/CreateFolderResponse")]
        SKT.Common.TikleDocManagerService.Result CreateFolder(string folderName, string userID, string workType, SKT.Common.TikleDocManagerService.T_Authority[] authorityList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/DeleteFolder", ReplyAction="http://tempuri.org/IDocManagerService/DeleteFolderResponse")]
        SKT.Common.TikleDocManagerService.Result DeleteFolder(string folderName, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/GetFolderItemCount", ReplyAction="http://tempuri.org/IDocManagerService/GetFolderItemCountResponse")]
        int GetFolderItemCount(string folderName, string keyWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/HasFileByName", ReplyAction="http://tempuri.org/IDocManagerService/HasFileByNameResponse")]
        SKT.Common.TikleDocManagerService.Result HasFileByName(string folderName, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/GetFolderItems", ReplyAction="http://tempuri.org/IDocManagerService/GetFolderItemsResponse")]
        SKT.Common.TikleDocManagerService.T_FileInfo[] GetFolderItems(string folderName, string keyword, int itemCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/UploadFile", ReplyAction="http://tempuri.org/IDocManagerService/UploadFileResponse")]
        SKT.Common.TikleDocManagerService.Result UploadFile(string folderName, string userID, string fileName, byte[] fileStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/DeleteFile", ReplyAction="http://tempuri.org/IDocManagerService/DeleteFileResponse")]
        SKT.Common.TikleDocManagerService.Result DeleteFile(string folderName, string fileName, string userID, string isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/ModifyFileName", ReplyAction="http://tempuri.org/IDocManagerService/ModifyFileNameResponse")]
        SKT.Common.TikleDocManagerService.Result ModifyFileName(string folderName, string fileName, string changeFileName, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/SetFileReadPermission", ReplyAction="http://tempuri.org/IDocManagerService/SetFileReadPermissionResponse")]
        SKT.Common.TikleDocManagerService.Result SetFileReadPermission(string folderName, string fileName, SKT.Common.TikleDocManagerService.T_Authority[] authorityList, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/GetCheckedUserInfo", ReplyAction="http://tempuri.org/IDocManagerService/GetCheckedUserInfoResponse")]
        SKT.Common.TikleDocManagerService.T_UserInfo GetCheckedUserInfo(string folderName, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/DownloadFile", ReplyAction="http://tempuri.org/IDocManagerService/DownloadFileResponse")]
        byte[] DownloadFile(string folderName, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/SearchFiles", ReplyAction="http://tempuri.org/IDocManagerService/SearchFilesResponse")]
        SKT.Common.TikleDocManagerService.T_FileInfo[] SearchFiles(string folderNames, string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocManagerService/GetFileHistory", ReplyAction="http://tempuri.org/IDocManagerService/GetFileHistoryResponse")]
        SKT.Common.TikleDocManagerService.T_FileInfo[] GetFileHistory(string folderNames, string fileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocManagerServiceChannel : SKT.Common.TikleDocManagerService.IDocManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocManagerServiceClient : System.ServiceModel.ClientBase<SKT.Common.TikleDocManagerService.IDocManagerService>, SKT.Common.TikleDocManagerService.IDocManagerService {
        
        public DocManagerServiceClient() {
        }
        
        public DocManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SKT.Common.TikleDocManagerService.Result CreateFolder(string folderName, string userID, string workType, SKT.Common.TikleDocManagerService.T_Authority[] authorityList) {
            return base.Channel.CreateFolder(folderName, userID, workType, authorityList);
        }
        
        public SKT.Common.TikleDocManagerService.Result DeleteFolder(string folderName, string userID) {
            return base.Channel.DeleteFolder(folderName, userID);
        }
        
        public int GetFolderItemCount(string folderName, string keyWord) {
            return base.Channel.GetFolderItemCount(folderName, keyWord);
        }
        
        public SKT.Common.TikleDocManagerService.Result HasFileByName(string folderName, string fileName) {
            return base.Channel.HasFileByName(folderName, fileName);
        }
        
        public SKT.Common.TikleDocManagerService.T_FileInfo[] GetFolderItems(string folderName, string keyword, int itemCount) {
            return base.Channel.GetFolderItems(folderName, keyword, itemCount);
        }
        
        public SKT.Common.TikleDocManagerService.Result UploadFile(string folderName, string userID, string fileName, byte[] fileStream) {
            return base.Channel.UploadFile(folderName, userID, fileName, fileStream);
        }
        
        public SKT.Common.TikleDocManagerService.Result DeleteFile(string folderName, string fileName, string userID, string isAdmin) {
            return base.Channel.DeleteFile(folderName, fileName, userID, isAdmin);
        }
        
        public SKT.Common.TikleDocManagerService.Result ModifyFileName(string folderName, string fileName, string changeFileName, string userID) {
            return base.Channel.ModifyFileName(folderName, fileName, changeFileName, userID);
        }
        
        public SKT.Common.TikleDocManagerService.Result SetFileReadPermission(string folderName, string fileName, SKT.Common.TikleDocManagerService.T_Authority[] authorityList, string userID) {
            return base.Channel.SetFileReadPermission(folderName, fileName, authorityList, userID);
        }
        
        public SKT.Common.TikleDocManagerService.T_UserInfo GetCheckedUserInfo(string folderName, string fileName) {
            return base.Channel.GetCheckedUserInfo(folderName, fileName);
        }
        
        public byte[] DownloadFile(string folderName, string fileName) {
            return base.Channel.DownloadFile(folderName, fileName);
        }
        
        public SKT.Common.TikleDocManagerService.T_FileInfo[] SearchFiles(string folderNames, string keyword) {
            return base.Channel.SearchFiles(folderNames, keyword);
        }
        
        public SKT.Common.TikleDocManagerService.T_FileInfo[] GetFileHistory(string folderNames, string fileName) {
            return base.Channel.GetFileHistory(folderNames, fileName);
        }
    }
}
